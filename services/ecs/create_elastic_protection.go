package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateElasticProtection invokes the ecs.CreateElasticProtection API synchronously
func (client *Client) CreateElasticProtection(request *CreateElasticProtectionRequest) (response *CreateElasticProtectionResponse, err error) {
	response = CreateCreateElasticProtectionResponse()
	err = client.DoAction(request, response)
	return
}

// CreateElasticProtectionWithChan invokes the ecs.CreateElasticProtection API asynchronously
func (client *Client) CreateElasticProtectionWithChan(request *CreateElasticProtectionRequest) (<-chan *CreateElasticProtectionResponse, <-chan error) {
	responseChan := make(chan *CreateElasticProtectionResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateElasticProtection(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateElasticProtectionWithCallback invokes the ecs.CreateElasticProtection API asynchronously
func (client *Client) CreateElasticProtectionWithCallback(request *CreateElasticProtectionRequest, callback func(response *CreateElasticProtectionResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateElasticProtectionResponse
		var err error
		defer close(result)
		response, err = client.CreateElasticProtection(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateElasticProtectionRequest is the request struct for api CreateElasticProtection
type CreateElasticProtectionRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	InstanceTypes        *[]string        `position:"Query" name:"InstanceTypes"  type:"Repeated"`
	Description          string           `position:"Query" name:"Description"`
	StartTime            string           `position:"Query" name:"StartTime"`
	Platform             string           `position:"Query" name:"Platform"`
	ZoneIds              *[]string        `position:"Query" name:"ZoneIds"  type:"Repeated"`
	InstanceChargeType   string           `position:"Query" name:"InstanceChargeType"`
	ProtectionTimes      string           `position:"Query" name:"ProtectionTimes"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	InstanceEligibility  string           `position:"Query" name:"InstanceEligibility"`
	Name                 string           `position:"Query" name:"Name"`
	PackageType          string           `position:"Query" name:"PackageType"`
	ResourceAmount       string           `position:"Query" name:"ResourceAmount"`
}

// CreateElasticProtectionResponse is the response struct for api CreateElasticProtection
type CreateElasticProtectionResponse struct {
	*responses.BaseResponse
	RequestId           string `json:"RequestId" xml:"RequestId"`
	ElasticProtectionId string `json:"ElasticProtectionId" xml:"ElasticProtectionId"`
	Status              string `json:"Status" xml:"Status"`
	Name                string `json:"Name" xml:"Name"`
	Description         string `json:"Description" xml:"Description"`
}

// CreateCreateElasticProtectionRequest creates a request to invoke CreateElasticProtection API
func CreateCreateElasticProtectionRequest() (request *CreateElasticProtectionRequest) {
	request = &CreateElasticProtectionRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2014-05-26", "CreateElasticProtection", "ecs", "openAPI")
	request.Method = requests.POST
	return
}

// CreateCreateElasticProtectionResponse creates a response to parse from CreateElasticProtection response
func CreateCreateElasticProtectionResponse() (response *CreateElasticProtectionResponse) {
	response = &CreateElasticProtectionResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
