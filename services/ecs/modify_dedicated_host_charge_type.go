package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ModifyDedicatedHostChargeType invokes the ecs.ModifyDedicatedHostChargeType API synchronously
func (client *Client) ModifyDedicatedHostChargeType(request *ModifyDedicatedHostChargeTypeRequest) (response *ModifyDedicatedHostChargeTypeResponse, err error) {
	response = CreateModifyDedicatedHostChargeTypeResponse()
	err = client.DoAction(request, response)
	return
}

// ModifyDedicatedHostChargeTypeWithChan invokes the ecs.ModifyDedicatedHostChargeType API asynchronously
func (client *Client) ModifyDedicatedHostChargeTypeWithChan(request *ModifyDedicatedHostChargeTypeRequest) (<-chan *ModifyDedicatedHostChargeTypeResponse, <-chan error) {
	responseChan := make(chan *ModifyDedicatedHostChargeTypeResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ModifyDedicatedHostChargeType(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ModifyDedicatedHostChargeTypeWithCallback invokes the ecs.ModifyDedicatedHostChargeType API asynchronously
func (client *Client) ModifyDedicatedHostChargeTypeWithCallback(request *ModifyDedicatedHostChargeTypeRequest, callback func(response *ModifyDedicatedHostChargeTypeResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ModifyDedicatedHostChargeTypeResponse
		var err error
		defer close(result)
		response, err = client.ModifyDedicatedHostChargeType(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ModifyDedicatedHostChargeTypeRequest is the request struct for api ModifyDedicatedHostChargeType
type ModifyDedicatedHostChargeTypeRequest struct {
	*requests.RpcRequest
	DedicatedHostIds        string           `position:"Query" name:"DedicatedHostIds"`
	ResourceOwnerId         requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ClientToken             string           `position:"Query" name:"ClientToken"`
	DedicatedHostChargeType string           `position:"Query" name:"DedicatedHostChargeType"`
	IsDetailFee             requests.Boolean `position:"Query" name:"IsDetailFee"`
	Period                  requests.Integer `position:"Query" name:"Period"`
	DryRun                  requests.Boolean `position:"Query" name:"DryRun"`
	AutoPay                 requests.Boolean `position:"Query" name:"AutoPay"`
	IncludeDataDisks        requests.Boolean `position:"Query" name:"IncludeDataDisks"`
	ResourceOwnerAccount    string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount            string           `position:"Query" name:"OwnerAccount"`
	OwnerId                 requests.Integer `position:"Query" name:"OwnerId"`
	PeriodUnit              string           `position:"Query" name:"PeriodUnit"`
}

// ModifyDedicatedHostChargeTypeResponse is the response struct for api ModifyDedicatedHostChargeType
type ModifyDedicatedHostChargeTypeResponse struct {
	*responses.BaseResponse
	RequestId      string                                        `json:"RequestId" xml:"RequestId"`
	OrderId        string                                        `json:"OrderId" xml:"OrderId"`
	FeeOfInstances FeeOfInstancesInModifyDedicatedHostChargeType `json:"FeeOfInstances" xml:"FeeOfInstances"`
}

// CreateModifyDedicatedHostChargeTypeRequest creates a request to invoke ModifyDedicatedHostChargeType API
func CreateModifyDedicatedHostChargeTypeRequest() (request *ModifyDedicatedHostChargeTypeRequest) {
	request = &ModifyDedicatedHostChargeTypeRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2014-05-26", "ModifyDedicatedHostChargeType", "ecs", "openAPI")
	request.Method = requests.POST
	return
}

// CreateModifyDedicatedHostChargeTypeResponse creates a response to parse from ModifyDedicatedHostChargeType response
func CreateModifyDedicatedHostChargeTypeResponse() (response *ModifyDedicatedHostChargeTypeResponse) {
	response = &ModifyDedicatedHostChargeTypeResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
