package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// CreateInstancesSystemEvent invokes the ecs.CreateInstancesSystemEvent API synchronously
func (client *Client) CreateInstancesSystemEvent(request *CreateInstancesSystemEventRequest) (response *CreateInstancesSystemEventResponse, err error) {
	response = CreateCreateInstancesSystemEventResponse()
	err = client.DoAction(request, response)
	return
}

// CreateInstancesSystemEventWithChan invokes the ecs.CreateInstancesSystemEvent API asynchronously
func (client *Client) CreateInstancesSystemEventWithChan(request *CreateInstancesSystemEventRequest) (<-chan *CreateInstancesSystemEventResponse, <-chan error) {
	responseChan := make(chan *CreateInstancesSystemEventResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.CreateInstancesSystemEvent(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// CreateInstancesSystemEventWithCallback invokes the ecs.CreateInstancesSystemEvent API asynchronously
func (client *Client) CreateInstancesSystemEventWithCallback(request *CreateInstancesSystemEventRequest, callback func(response *CreateInstancesSystemEventResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *CreateInstancesSystemEventResponse
		var err error
		defer close(result)
		response, err = client.CreateInstancesSystemEvent(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// CreateInstancesSystemEventRequest is the request struct for api CreateInstancesSystemEvent
type CreateInstancesSystemEventRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	NotBefore            string           `position:"Query" name:"NotBefore"`
	ExecuteEvent         requests.Boolean `position:"Query" name:"ExecuteEvent"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	InstanceId           *[]string        `position:"Query" name:"InstanceId"  type:"Repeated"`
	EventType            string           `position:"Query" name:"EventType"`
}

// CreateInstancesSystemEventResponse is the response struct for api CreateInstancesSystemEvent
type CreateInstancesSystemEventResponse struct {
	*responses.BaseResponse
	RequestId string   `json:"RequestId" xml:"RequestId"`
	EventIds  EventIds `json:"EventIds" xml:"EventIds"`
}

// CreateCreateInstancesSystemEventRequest creates a request to invoke CreateInstancesSystemEvent API
func CreateCreateInstancesSystemEventRequest() (request *CreateInstancesSystemEventRequest) {
	request = &CreateInstancesSystemEventRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2014-05-26", "CreateInstancesSystemEvent", "ecs", "openAPI")
	request.Method = requests.POST
	return
}

// CreateCreateInstancesSystemEventResponse creates a response to parse from CreateInstancesSystemEvent response
func CreateCreateInstancesSystemEventResponse() (response *CreateInstancesSystemEventResponse) {
	response = &CreateInstancesSystemEventResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
