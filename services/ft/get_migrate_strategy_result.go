package ft

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetMigrateStrategyResult invokes the ft.GetMigrateStrategyResult API synchronously
// api document: https://help.aliyun.com/api/ft/getmigratestrategyresult.html
func (client *Client) GetMigrateStrategyResult(request *GetMigrateStrategyResultRequest) (response *GetMigrateStrategyResultResponse, err error) {
	response = CreateGetMigrateStrategyResultResponse()
	err = client.DoAction(request, response)
	return
}

// GetMigrateStrategyResultWithChan invokes the ft.GetMigrateStrategyResult API asynchronously
// api document: https://help.aliyun.com/api/ft/getmigratestrategyresult.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetMigrateStrategyResultWithChan(request *GetMigrateStrategyResultRequest) (<-chan *GetMigrateStrategyResultResponse, <-chan error) {
	responseChan := make(chan *GetMigrateStrategyResultResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetMigrateStrategyResult(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetMigrateStrategyResultWithCallback invokes the ft.GetMigrateStrategyResult API asynchronously
// api document: https://help.aliyun.com/api/ft/getmigratestrategyresult.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetMigrateStrategyResultWithCallback(request *GetMigrateStrategyResultRequest, callback func(response *GetMigrateStrategyResultResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetMigrateStrategyResultResponse
		var err error
		defer close(result)
		response, err = client.GetMigrateStrategyResult(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetMigrateStrategyResultRequest is the request struct for api GetMigrateStrategyResult
type GetMigrateStrategyResultRequest struct {
	*requests.RpcRequest
	ParentName   string           `position:"Query" name:"parentName"`
	CurrentPage  requests.Integer `position:"Query" name:"CurrentPage"`
	BucName      string           `position:"Query" name:"BucName"`
	Env          string           `position:"Query" name:"Env"`
	Type         string           `position:"Query" name:"type"`
	BucEmpId     string           `position:"Query" name:"BucEmpId"`
	StrategyName string           `position:"Body" name:"strategyName"`
	ApiName      string           `position:"Query" name:"ApiName"`
	FlowSpecial  string           `position:"Query" name:"flowSpecial"`
	PageSize     requests.Integer `position:"Query" name:"PageSize"`
	ProductName  string           `position:"Query" name:"ProductName"`
	BucUid       string           `position:"Query" name:"BucUid"`
	VersionName  string           `position:"Query" name:"VersionName"`
	Status       string           `position:"Query" name:"status"`
}

// GetMigrateStrategyResultResponse is the response struct for api GetMigrateStrategyResult
type GetMigrateStrategyResultResponse struct {
	*responses.BaseResponse
	Success   bool   `json:"Success" xml:"Success"`
	Code      string `json:"Code" xml:"Code"`
	Message   string `json:"Message" xml:"Message"`
	MessageCN string `json:"MessageCN" xml:"MessageCN"`
	RequestId string `json:"RequestId" xml:"RequestId"`
	Data      Data   `json:"Data" xml:"Data"`
}

// CreateGetMigrateStrategyResultRequest creates a request to invoke GetMigrateStrategyResult API
func CreateGetMigrateStrategyResultRequest() (request *GetMigrateStrategyResultRequest) {
	request = &GetMigrateStrategyResultRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ft", "2018-07-13", "GetMigrateStrategyResult", "", "")
	request.Method = requests.POST
	return
}

// CreateGetMigrateStrategyResultResponse creates a response to parse from GetMigrateStrategyResult response
func CreateGetMigrateStrategyResultResponse() (response *GetMigrateStrategyResultResponse) {
	response = &GetMigrateStrategyResultResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
