package ft

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// RpcHsfServiceRouteMatchApi invokes the ft.RpcHsfServiceRouteMatchApi API synchronously
func (client *Client) RpcHsfServiceRouteMatchApi(request *RpcHsfServiceRouteMatchApiRequest) (response *RpcHsfServiceRouteMatchApiResponse, err error) {
	response = CreateRpcHsfServiceRouteMatchApiResponse()
	err = client.DoAction(request, response)
	return
}

// RpcHsfServiceRouteMatchApiWithChan invokes the ft.RpcHsfServiceRouteMatchApi API asynchronously
func (client *Client) RpcHsfServiceRouteMatchApiWithChan(request *RpcHsfServiceRouteMatchApiRequest) (<-chan *RpcHsfServiceRouteMatchApiResponse, <-chan error) {
	responseChan := make(chan *RpcHsfServiceRouteMatchApiResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.RpcHsfServiceRouteMatchApi(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// RpcHsfServiceRouteMatchApiWithCallback invokes the ft.RpcHsfServiceRouteMatchApi API asynchronously
func (client *Client) RpcHsfServiceRouteMatchApiWithCallback(request *RpcHsfServiceRouteMatchApiRequest, callback func(response *RpcHsfServiceRouteMatchApiResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *RpcHsfServiceRouteMatchApiResponse
		var err error
		defer close(result)
		response, err = client.RpcHsfServiceRouteMatchApi(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// RpcHsfServiceRouteMatchApiRequest is the request struct for api RpcHsfServiceRouteMatchApi
type RpcHsfServiceRouteMatchApiRequest struct {
	*requests.RpcRequest
	Name string `position:"Query" name:"Name"`
}

// RpcHsfServiceRouteMatchApiResponse is the response struct for api RpcHsfServiceRouteMatchApi
type RpcHsfServiceRouteMatchApiResponse struct {
	*responses.BaseResponse
	Age                            string                 `json:"Age" xml:"Age"`
	CheckNumberValue               string                 `json:"CheckNumberValue" xml:"CheckNumberValue"`
	Code                           string                 `json:"Code" xml:"Code"`
	DefaultValue                   string                 `json:"DefaultValue" xml:"DefaultValue"`
	EnumValue                      string                 `json:"EnumValue" xml:"EnumValue"`
	HttpStatusCode                 string                 `json:"HttpStatusCode" xml:"HttpStatusCode"`
	IntValue                       string                 `json:"IntValue" xml:"IntValue"`
	JsonListStrig                  string                 `json:"JsonListStrig" xml:"JsonListStrig"`
	Message                        string                 `json:"Message" xml:"Message"`
	Name                           string                 `json:"Name" xml:"Name"`
	NullToEmptyValue               string                 `json:"NullToEmptyValue" xml:"NullToEmptyValue"`
	NumberRange                    string                 `json:"NumberRange" xml:"NumberRange"`
	RegionId                       string                 `json:"RegionId" xml:"RegionId"`
	RequiredValue                  string                 `json:"RequiredValue" xml:"RequiredValue"`
	ResultSwitchValue              string                 `json:"ResultSwitchValue" xml:"ResultSwitchValue"`
	StringValue                    string                 `json:"StringValue" xml:"StringValue"`
	Success                        string                 `json:"Success" xml:"Success"`
	SwitchValue                    string                 `json:"SwitchValue" xml:"SwitchValue"`
	AkMfaPresent                   string                 `json:"ak_mfa_present" xml:"ak_mfa_present"`
	AppIp                          string                 `json:"app_ip" xml:"app_ip"`
	CallerBid                      string                 `json:"callerBid" xml:"callerBid"`
	CallerParentId                 string                 `json:"callerParentId" xml:"callerParentId"`
	CallerType                     string                 `json:"callerType" xml:"callerType"`
	CallerUid                      string                 `json:"callerUid" xml:"callerUid"`
	ProxyOriginalSecurityTransport string                 `json:"proxy_original_security_transport" xml:"proxy_original_security_transport"`
	ProxyOriginalSourceIp          string                 `json:"proxy_original_source_ip" xml:"proxy_original_source_ip"`
	ProxyTrustTransportInfo        string                 `json:"proxy_trust_transport_info" xml:"proxy_trust_transport_info"`
	RequestId                      string                 `json:"requestId" xml:"requestId"`
	ResourceOwnerId                string                 `json:"resourceOwnerId" xml:"resourceOwnerId"`
	SecurityTransport              string                 `json:"security_transport" xml:"security_transport"`
	NullToEmptyStructValue         NullToEmptyStructValue `json:"NullToEmptyStructValue" xml:"NullToEmptyStructValue"`
	StructValue                    StructValue            `json:"StructValue" xml:"StructValue"`
	ArrayValue                     []ArrayItem            `json:"ArrayValue" xml:"ArrayValue"`
	L1Array                        []L1ArrayItem          `json:"L1Array" xml:"L1Array"`
	NullArrayValue                 []ArrayItem            `json:"NullArrayValue" xml:"NullArrayValue"`
}

// CreateRpcHsfServiceRouteMatchApiRequest creates a request to invoke RpcHsfServiceRouteMatchApi API
func CreateRpcHsfServiceRouteMatchApiRequest() (request *RpcHsfServiceRouteMatchApiRequest) {
	request = &RpcHsfServiceRouteMatchApiRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ft", "2018-07-13", "RpcHsfServiceRouteMatchApi", "", "")
	request.Method = requests.POST
	return
}

// CreateRpcHsfServiceRouteMatchApiResponse creates a response to parse from RpcHsfServiceRouteMatchApi response
func CreateRpcHsfServiceRouteMatchApiResponse() (response *RpcHsfServiceRouteMatchApiResponse) {
	response = &RpcHsfServiceRouteMatchApiResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
